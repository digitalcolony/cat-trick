---
import Layout from "../layouts/Layout.astro";
import CatListByDate from "../components/CatListByDate";
import CatLeaderboard from "../components/CatLeaderboard.astro";

// fetch cats from google sheet
const res = await fetch(
	"https://script.google.com/macros/s/AKfycbzy_i6slqQaiFsOE0Ks-u8xWshdrswLBXc2xelM6ep-f45fgtN9f_RQ8TfwnqLYCLRb-Q/exec"
);
const { data } = await res.json();

const catsWithCount = data.reduce((acc, curr) => {
	if (!acc[curr.cat]) {
		acc[curr.cat] = 0;
	}
	acc[curr.cat]++;
	return acc;
}, {});

// Top 10 cats by count
const topCats = Object.entries(catsWithCount)
	.sort((a, b) => (b[1] as number) - (a[1] as number))
	.slice(0, 10)
	.map(([cat, count]) => `${Number(count) < 10 ? `0${count}` : count}: ${cat}`);

const groupedCats = data.reduce((acc, curr) => {
	if (!acc[curr.date]) {
		acc[curr.date] = [];
	}
	acc[curr.date].push(curr.cat);
	return acc;
}, {});

// sort groupedCats by date descending
const sortedGroupedCats = Object.entries(groupedCats).sort((a, b) => {
	const dateA = new Date(a[0]);
	const dateB = new Date(b[0]);
	return dateB.getTime() - dateA.getTime();
});

const catsByDate = sortedGroupedCats.map(([date, cats]) => {
	return {
		date,
		cats,
	};
});
---

<Layout
	title="😻 Cat Trick - Meeting the Cats of Ballard"
	description="Meeting the cats of Ballard. 3 cats in 1 day = a cat trick! 🏆"
	url=""
>
	<main>
		<h1 class="center">😻 Cat Trick</h1>
		<p class="center">Meeting the cats of Ballard. 3 cats in 1 day = a cat trick.</p>

		<CatLeaderboard topCats={topCats} />

		<p class="center">
			<em>* Cats with an asterisk are using a nickname until their real name is discovered. </em>
		</p>
		{catsByDate.length > 0 && <CatListByDate catsByDate={catsByDate} client:load />}
	</main>
</Layout>
